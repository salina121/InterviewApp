@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    var token = Xsrf.GetAndStoreTokens(Context).RequestToken;
    var currentCulture = Context.Request.Query["culture"].ToString();
    var cultureParam = !string.IsNullOrEmpty(currentCulture) ? $"?culture={currentCulture}" : "";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - InterviewBot</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    @await RenderSectionAsync("Styles", required: false)
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
            <div class="container">
                <a class="navbar-brand" href="/@cultureParam">InterviewBot</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav me-auto">
                        @if (User.Identity?.IsAuthenticated == true)
                        {
                            <li class="nav-item">
                                <a class="nav-link" href="/@cultureParam">@Localizer["Home"]</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/Topics@(cultureParam)">@Localizer["Topics"]</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/SubTopics@(cultureParam)">@Localizer["SubTopics"]</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/InterviewSessions@(cultureParam)">@Localizer["Sessions"]</a>
                            </li>
                        }
                    </ul>
                    <ul class="navbar-nav">
                        @if (User.Identity?.IsAuthenticated == true)
                        {
                            <li class="nav-item">
                                <span class="nav-link">@Localizer["Welcome"], @User.Identity.Name!</span>
                            </li>
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
                                    <i class="bi bi-translate"></i> @Localizer["Language"]
                                </a>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="?culture=en">English</a></li>
                                    <li><a class="dropdown-item" href="?culture=es">Español</a></li>
                                </ul>
                            </li>
                            <li class="nav-item">
                                <form method="post" action="/Account/Logout@(cultureParam)">
                                    <button type="submit" class="nav-link btn btn-link">@Localizer["Logout"]</button>
                                </form>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
                                    <i class="bi bi-translate"></i> @Localizer["Language"]
                                </a>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="?culture=en">English</a></li>
                                    <li><a class="dropdown-item" href="?culture=es">Español</a></li>
                                </ul>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/Account/Login@(cultureParam)">@Localizer["Login"]</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/Account/Register@(cultureParam)">@Localizer["Register"]</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <div class="container py-4">
        <main role="main">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted py-3">
        <div class="container text-center">
            &copy; @DateTime.Now.Year - InterviewBot
        </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>
        // Add antiforgery token to all AJAX requests
        document.addEventListener('DOMContentLoaded', function() {
            const antiforgery = document.createElement('input');
            antiforgery.type = 'hidden';
            antiforgery.name = '__RequestVerificationToken';
            antiforgery.value = '@token';

            document.querySelectorAll('form').forEach(form => {
                if (!form.querySelector('input[name="__RequestVerificationToken"]')) {
                    form.appendChild(antiforgery.cloneNode(true));
                }
            });

            // Preserve culture in all navigation links
            const currentCulture = '@currentCulture';
            if (currentCulture) {
                document.querySelectorAll('a[href^="/"]').forEach(link => {
                    const href = link.getAttribute('href');
                    if (href && !href.includes('culture=') && !href.includes('#')) {
                        const separator = href.includes('?') ? '&' : '?';
                        link.href = href + separator + 'culture=' + currentCulture;
                    }
                });
            }
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>